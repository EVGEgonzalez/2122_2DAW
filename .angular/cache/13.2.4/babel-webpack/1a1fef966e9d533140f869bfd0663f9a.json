{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet FormularioLoginComponent = class FormularioLoginComponent {\n  constructor(router, configService) {\n    this.router = router;\n    this.configService = configService; //Formulario de Alta y validadores\n\n    this.altaForm = new FormGroup({\n      nombre: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      emailAlta: new FormControl('', [Validators.required, Validators.email]),\n      // passwordAlta: new FormControl('',[Validators.required, Validators.minLength(6)]),\n      // confirm_password: new FormControl('',[Validators.required, Validators.minLength(6)]),\n      telefono: new FormControl('', [Validators.required, Validators.minLength(9), Validators.maxLength(9)]),\n      imagen: new FormControl('', [Validators.required])\n    }); //Formulario Login y validadores\n\n    this.loginForm = new FormGroup({\n      emailLogin: new FormControl('', [Validators.required, Validators.email]),\n      passwordLogin: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n    this.url = router.url;\n  }\n\n  get emailAlta() {\n    return this.altaForm.get('emailAlta');\n  } // get passwordAlta(){return this.altaForm.get('passwordAlta')}\n  // get confirm_password(){return this.altaForm.get('confirm_password')}\n\n\n  get nombre() {\n    return this.altaForm.get('nombre');\n  }\n\n  get telefono() {\n    return this.altaForm.get('telefono');\n  }\n\n  get imagen() {\n    return this.altaForm.get('imagen');\n  }\n\n  get emailLogin() {\n    return this.altaForm.get('emailLogin');\n  }\n\n  get passwordLogin() {\n    return this.altaForm.get('passwordLogin');\n  }\n  /**\r\n   * @function onPasswordChange\r\n   * @description comprueba si el campo de passworAlta y confirm_password coinciden, si no, el campo confirm password es erróneo\r\n   */\n  // onPasswordChange() {\n  //   if (this.confirm_password!.value == this.passwordAlta!.value) {\n  //     this.confirm_password!.setErrors(null);\n  //   } else {\n  //     this.confirm_password!\n  //     .setErrors({ mismatch: true });\n  //   }\n  // }\n\n\n  ngOnInit() {}\n\n  procesarImagen(imageInput) {\n    const file = imageInput.files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', event => {\n      file.text().then(texto => this.ficheroBase64 = reader.result);\n    });\n    reader.readAsDataURL(file);\n  }\n  /**\r\n   * @function enviar\r\n   * @description función que envía el valor del formulario en forma de objeto al servicio. Según la respuesta del servidor muestra éxito o fracaso.\r\n   */\n\n\n  enviar() {\n    switch (this.url) {\n      case '/alta':\n        this.configService.alta(this.altaForm.value).subscribe(response => {\n          if (response['resultado'] == 'OK') {\n            alert('exito');\n          } else {\n            alert('fracaso');\n          }\n        });\n        break;\n\n      case '/login':\n        this.configService.login(this.loginForm.value).subscribe(response => {\n          if (response['resultado'] == 'OK') {\n            alert('exito');\n          } else if (response['resultado'] == 'NOK') {\n            alert('fracaso');\n          }\n        });\n        break;\n    }\n  }\n\n};\nFormularioLoginComponent = __decorate([Component({\n  selector: 'app-formulario-login',\n  templateUrl: './formulario-login.component.html',\n  styleUrls: ['./formulario-login.component.css']\n})], FormularioLoginComponent);\nexport { FormularioLoginComponent };","map":null,"metadata":{},"sourceType":"module"}